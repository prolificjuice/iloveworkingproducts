{"version":3,"sources":["components/static/Titles.js","components/directionsPage/DestinationInput.js","components/directionsPage/weather.js","components/directionsPage/WeatherSidebar.js","components/directionsPage/Directions.js","routes/directionsPage.js","routes/weatherPage.js","routes/placeholderIndex.js","App.js","index.js","registerServiceWorker.js"],"names":["Titles","react_default","a","createElement","className","React","Component","DestinationInput","state","departingFrom","destination","time","parking","onButtonClick","event","preventDefault","_this2","this","type","name","placeholder","onChange","e","setState","target","value","onClick","checked","Weather","props","getWeather","summary","temperature","humidity","visibility","WeatherSidebar","undefined","error","async","axios","get","concat","then","response","_this","data","currently","weather","Directions","directions","window","google","maps","DirectionsService","route","origin","lat","lng","travelMode","TravelMode","BICYCLING","result","status","DirectionsStatus","OK","console","log","lib","defaultZoom","defaultCenter","position","withScriptjs","withGoogleMap","DirectionsPage","components_directionsPage_DestinationInput","directionsPage_Directions","googleMapURL","loadingElement","style","height","containerElement","marginTop","mapElement","directionsPage_WeatherSidebar","WeathePage","Index","react_router_dom","to","App","static_Titles","react_router","path","exact","component","Placeholder","WeatherPage","ReactDOM","render","src_App_0","document","getElementById","navigator","addEventListener","swUrl","process","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch"],"mappings":"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","file":"static/js/main.31ac9de6.chunk.js","sourcesContent":["import React from 'react';\r\nimport './titles.css'\r\nclass Titles extends React.Component{\r\n   render(){\r\n     return(\r\n       <div className=\"row\">\r\n           <span className=\"col-7 titleWHERE\">WHERE</span>\r\n           <span className=\"col-5\"></span>\r\n           <span className=\"col-2 titleTO\">TO</span>\r\n           <span className=\"col-10 titleBIKE\">BIKE?</span>\r\n       </div>\r\n     );\r\n   }\r\n};\r\n\r\nexport default Titles;\r\n","import React from 'react';\r\nimport './DestinationInput.css'\r\n//Input box for destination takes a gew\r\nclass DestinationInput extends React.Component{\r\n\r\n  // state variables needed to map bike ride route\r\n  state = {\r\n    departingFrom: '',\r\n    destination: '',\r\n    time: '',\r\n    parking: false\r\n   }\r\n\r\n   // will take care of form submittal in future to update destination routes\r\n   onButtonClick = (event) => {\r\n     event.preventDefault();\r\n   }\r\n\r\n   render(){\r\n     return(\r\n\r\n       // form made to take the users preffered destination, departure location,\r\n       // time of departure and options for showing parking. All gets put into state\r\n       // when button is pressed.\r\n       <form className=\"box-container\">\r\n        <div className=\"row \">\r\n\r\n           <div className=\"form-group col-xs-12 col-8\">\r\n           <label className=\"control-label\">Departing from:</label>\r\n           <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"depart\"\r\n              placeholder=\"Start Of Journey...\"\r\n              onChange={e => this.setState({ departingFrom: e.target.value })}\r\n            />\r\n           </div>\r\n\r\n           <div className=\"form-group col-xs-12 col-4\">\r\n           <label className=\"control-label\">Time:</label>\r\n           <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"time\"\r\n              placeholder=\" 09:00AM\"\r\n              onChange={e => this.setState({ time: e.target.value })}\r\n            />\r\n           </div>\r\n\r\n           <div className=\"form-group col-xs-12 col-12\">\r\n           <label className=\"control-label\">Your Destination:</label>\r\n           <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"Destination\"\r\n              placeholder=\"Destination\"\r\n              onChange={e => this.setState({ destination: e.target.value })}\r\n            />\r\n           </div>\r\n\r\n           <div className=\"form-check\">\r\n             <label className=\"checkboxContainer\">Find nearest bike parking\r\n               <input\r\n                  type=\"checkbox\"\r\n                  onClick={e => this.setState({parking: e.target.checked})}\r\n                />\r\n               <span className=\"checkmark\"></span>\r\n             </label>\r\n            </div>\r\n        </div>\r\n\r\n       <center>\r\n        <button className=\"btn btn-success\" onClick={this.onButtonClick}>Map My Ride!</button>\r\n       </center>\r\n     </form>\r\n     );\r\n   }\r\n};\r\n\r\nexport default DestinationInput\r\n","import React from 'react';\r\n\r\n// Basic class displays weather details passed in as prop parameters\r\nclass Weather extends React.Component {\r\n  componentDidMount() {\r\n    this.props.getWeather();\r\n  }\r\n  render(){\r\n    return (\r\n      <div>\r\n      Current Weather\r\n      <hr/>\r\n      {this.props.summary && <p>Summary: {this.props.summary}</p> }\r\n      {this.props.temperature && <p>Temperature: {this.props.temperature}</p> }\r\n      {this.props.humidity && <p>Humidity: {this.props.humidity}</p> }\r\n      {this.props.visibility && <p>Visibility: {this.props.visibility}</p> }\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Weather;\r\n","import React from 'react';\r\nimport Weather from './weather';\r\nimport axios from 'axios';\r\n\r\nclass WeatherSidebar extends React.Component {\r\n\r\n  state = {\r\n    summary: undefined,\r\n    temperature: undefined,\r\n    humidity: undefined,\r\n    visibility: undefined,\r\n    error: undefined\r\n  }\r\n\r\n  getWeather = async => {\r\n    const lat = \"144.9612\";\r\n    const lng = \"37.7964\";\r\n\r\n    axios.get(`/getWeather/${lat}/${lng}`).then(response => {\r\n      this.setState({\r\n        summary: response.data.currently.summary,\r\n        temperature: response.data.currently.temperature,\r\n        humidity: response.data.currently.humidity,\r\n        visibility: response.data.currently.visibility,\r\n        error: \"\"\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div className=\"box-container\">\r\n        <Weather getWeather={this.getWeather}\r\n          summary={this.state.summary}\r\n          temperature={this.state.temperature}\r\n          humidity={this.state.humidity}\r\n          visibility={this.state.visibility}\r\n          error={this.state.error}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherSidebar;\r\n","import React from 'react';\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  DirectionsRenderer,\r\n  Marker,\r\n} from 'react-google-maps';\r\n\r\nclass Directions extends React.Component {\r\n  state = {\r\n    directions:null\r\n  }\r\n\r\n  // uses google maps api to get directions of a currently hardcoded trip from\r\n  // origin to destination and then updates state with results.\r\n  componentDidMount(){\r\n    const DirectionsService = new window.google.maps.DirectionsService();\r\n    const origin = { lat:-37.7964, lng: 144.9612 }\r\n    const destination = { lat:-37.8064, lng: 144.9312 }\r\n\r\n    DirectionsService.route({\r\n        origin: origin,\r\n        destination: destination,\r\n        travelMode: window.google.maps.TravelMode.BICYCLING,\r\n      }, (result, status) => {\r\n        if (status === window.google.maps.DirectionsStatus.OK) {\r\n          this.setState({\r\n            directions: result,\r\n          });\r\n          console.log(result);\r\n        } else {\r\n          console.error(`error fetching directions ${result}`);\r\n        }\r\n      });\r\n  }\r\n\r\n  // renders the map with a direction renderer so that an outline of route appears\r\n  // as a map overlay.\r\n  render(){\r\n    return(\r\n      <GoogleMap className=\"box-container\"\r\n        defaultZoom={15}\r\n        defaultCenter={{ lat:-37.7964, lng: 144.9612}}\r\n      >\r\n        <Marker\r\n          position={{ lat:-37.7964, lng: 144.9612}}\r\n        />\r\n        <DirectionsRenderer directions={this.state.directions} />\r\n      </GoogleMap>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withScriptjs(withGoogleMap(Directions));\r\n","import React from 'react';\r\nimport DestinationInput from '../components/directionsPage/DestinationInput';\r\nimport WeatherSidebar from '../components/directionsPage/WeatherSidebar';\r\nimport Directions from '../components/directionsPage/Directions';\r\n\r\nclass DirectionsPage extends React.Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div>\r\n          <div className=\"container-fluid\" >\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <DestinationInput />\r\n              </div>\r\n\r\n            </div>\r\n            <br/><br/><hr/><br/>\r\n          </div>\r\n\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-8\">\r\n              <Directions\r\n                googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyB4o0VU4jQ0QnqbzXYnAfO89GZBFUGT5tQ&v=3.exp&libraries=geometry,drawing,places\"\r\n                loadingElement={<div style={{ height: `100%` }} />}\r\n                containerElement={<div style={{ height: `400px`, marginTop:'10px' }} />}\r\n                mapElement={<div style={{ height: `100%` }} />}\r\n              />\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <WeatherSidebar />\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DirectionsPage;\r\n","import React from 'react';\r\n\r\nclass WeathePage extends React.Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default WeathePage;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Index extends React.Component {\r\n  render() {\r\n    return(\r\n      <div>\r\n        <Link to=\"/weather\"><button className=\"btn btn-primary\"> WEATHER PAGE </button></Link>\r\n        <br />\r\n        <br />\r\n        <Link to=\"/directions\"><button className=\"btn btn-primary\"> DIRECTIONS PAGE</button></Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Index;\r\n","import React from 'react';\r\nimport { BrowserRouter, Route} from 'react-router-dom'\r\nimport Titles from './components/static/Titles';\r\nimport DirectionsPage from './routes/directionsPage';\r\nimport WeatherPage from './routes/weatherPage';\r\nimport Placeholder from './routes/placeholderIndex';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return(\r\n      <BrowserRouter>\r\n      <div className=\"container\">\r\n        <div className=\"container-fluid\">\r\n          <Titles />\r\n          <Route path=\"/\" exact component={Placeholder} />\r\n          <Route path=\"/weather\" exact component={WeatherPage} />\r\n          <Route path=\"/directions\" exact component={DirectionsPage} />\r\n        </div>\r\n      </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport \"./App.css\"\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n          registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            installingWorker.onstatechange = () => {\r\n              if (installingWorker.state === 'installed') {\r\n                if (navigator.serviceWorker.controller) {\r\n                  // At this point, the old content will have been purged and\r\n                  // the fresh content will have been added to the cache.\r\n                  // It's the perfect time to display a \"New content is\r\n                  // available; please refresh.\" message in your web app.\r\n                  console.log('New content is available; please refresh.');\r\n                } else {\r\n                  // At this point, everything has been precached.\r\n                  // It's the perfect time to display a\r\n                  // \"Content is cached for offline use.\" message.\r\n                  console.log('Content is cached for offline use.');\r\n                }\r\n              }\r\n            };\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during service worker registration:', error);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}